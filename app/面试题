

1.介绍下四大组件(能说出来4个并能说下作用就可以)
2.activity启动模式(能答出4中启动模式就行)
3.生命周期,A->B页面,再关闭B页面,那么描述下A,B页面的生命周期变化.

以上3个问题,能答出来就可以了,基本上表示有接触过安卓.



4.Android中的性能优化相关问题

由于手机硬件的限制，在Android手机中过多的使用内存，会容易导致oom（out of memory 内存溢出），
过多的使用CPU资源，会导致手机卡顿，甚至导致ANR(Application Not Responding 应用程序无响应)，Android主要从以下几部分对此进行优化：
布局优化，使用herarchyviewer(视图层次窗口)工具删除无用的空间和层级；
选择性能较低的viewgroup，比如在可以选择RelativeLayout也可以使用LinearLayout的情况下，优先使用LinearLayout，因为相对来说RelativeLayout功能较为复杂，会占用更多的CPU资源；
使用标签重用布局、减少层级、进行预加载（用的时候才加载）；
绘制优化：指view在ondraw方法中避免大量的耗时的操作，由于onDraw方法可能会被频繁的调用；
ondraw方法中不要创建新的局部变量，ondraw方法被频繁的调用，很容易引起GC；
ondraw方法不要做耗时的操作；
线程优化：使用线程池来管理和复用线程，避免程序中出现大量的Thread，同时可以控制线 的并发数，避免相互抢占资源，而导致线程阻塞

(一般面试者能答出线程优化相关的,就可以)



5.内存泄漏的相关原因

如果一个无用的对象（不需要再使用的对象）仍然被其他对象持有引用，造成该对象无法被系统回收，以致该对象在堆中所占有的内存单元无法被释放而造成内存空间浪费，这种情况就是内存泄漏，常见的内存泄露的场景有：
单例模式：因为单例的静态特性使得他的生命周期同应用的生命周期一样长，如果一个对象已经没有用处了，但是单例还持有他的引用，那么在某个应用程序的生命周期他都不能正常回收，从而导致内存泄漏；
静态变量导致内存泄漏：静态变量存储在方法区，他的生命周期从类加载开始，到整个进程结束，一旦静态变量初始化，他所持有的引用只有等到进程结束才会释放；
非静态内部类导致内存泄漏：非静态内部类（包括匿名内部类）默认就会持有外部类的引用，当非静态内部类对象的生命周期比外部对象的生命周期长时，就会导致内存泄漏，通常在Android开发中，如果要使用内部类，但又要规避内存泄漏，一般会采用静态内部类+弱引用的方式；
未取消注册或回掉导致内存泄漏：比如在Activity中注册广播，如果在Activity销毁后不取消注册，那么这个广播会一直存在于系统中，同非静态内部类一样持有Activity引用，导致内存泄漏，因此在注册广播后一定要取消注册；

(符合上面答案两点以上就可以)


6.通过Handler在线程间通信的原理
Android中主线程是不能进行耗时操作的，子线程不能进行更新UI，所以就有了Handler，其作用就是实现线程之间的通信。
Handler在整个线程通信的过程中，主要有四个对象，Handler、Message、MessageQueue、Looper等，当应用创建时，就会在主线程中创建Handler对象，将要传递的信息保存到Message中，Handler通过调用sendMessage()方法将Message发送到MessageQueue中，Looper对象不断调用Loop( )方法从MessageQueue中取出Message交给handler进行处理，从而实现线程之间的通信。

(这是基础也是重点,面试必须要提到Handler、Message、MessageQueue、Looper这4个对象才可以)



项目相关

 7.结合自己项目讲述下,使用第三方框架的原理.或者讲述下网络框架retrofit的原理(只要提到反射,或者动态代理)

 8.问下有没有使用过kotlin的协程,讲述下原理,(我们项目中有使用到协程,没用过的学习成本会比较高点).

 9.知道kotlin的高级函数吗? 举例说说知道这些函数的用法 any,apply,let,run(能提到这几个并说出用法场景就行)

 10.讲述下MVP和MVVM的区别,有没有使用过databinding,解释下原理,优缺点(需要提到订阅模式)


 (上面这些问题,都是基础也是很常见的问题,每个问题基本上都说出个大概,正常有过项目经验的都能接触到这些.)










